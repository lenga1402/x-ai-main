/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../../Staking.sol/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "NewStake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakinger",
        type: "address",
      },
    ],
    name: "NewStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "UpdatedStake",
    type: "event",
  },
  {
    inputs: [],
    name: "FeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAITING_TIME_TO_UNSTAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_apy",
        type: "uint256",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllUserStakeHistory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created_at",
            type: "uint256",
          },
          {
            internalType: "enum Staking.HistoryType",
            name: "history_type",
            type: "uint8",
          },
        ],
        internalType: "struct Staking.UserStakeHistory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getUserStakeIdList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenStaking",
        type: "address",
      },
    ],
    name: "setTokenStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStaking",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUserStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFeeReceiver",
        type: "address",
      },
    ],
    name: "updateFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_apy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "updateStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newStakeFee",
        type: "uint256",
      },
    ],
    name: "updateStakeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUnstakeFee",
        type: "uint256",
      },
    ],
    name: "updateUnstakeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600255601e600355600480546001600160a01b0319167362ab668aa5a7425fa553855a7bc37a678cf054b117905534801561004057600080fd5b506040516117a13803806117a183398101604081905261005f916100e1565b61006833610091565b60018055600680546001600160a01b0319166001600160a01b0392909216919091179055610111565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f357600080fd5b81516001600160a01b038116811461010a57600080fd5b9392505050565b611681806101206000396000f3fe608060405234801561001057600080fd5b50600436106101a75760003560e01c806384c73d38116100f9578063cf24ee4e11610097578063eae2399411610071578063eae2399414610403578063f2fde38b14610416578063fd2b520214610429578063fd922d081461043c57600080fd5b8063cf24ee4e146103ab578063d1658d7f146103be578063d5a44f86146103c757600080fd5b80638ea97d26116100d35780638ea97d26146102f15780639239a750146102fa578063ac93d5ad14610383578063c69bebe41461039857600080fd5b806384c73d38146102cd5780638b0e9f3f146102d75780638da5cb5b146102e057600080fd5b80633ccfd60b11610166578063715018a611610140578063715018a61461028c5780637b0472f0146102945780637dc30ede146102a757806381b9da62146102ba57600080fd5b80633ccfd60b1461025b578063567e98f91461026357806370a082311461026c57600080fd5b8062025164146101ac5780628cc262146101dc57806312f7086c1461020a578063222c97771461021d57806334af5bdd14610226578063379607f514610246575b600080fd5b6004546101bf906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101fc6101ea3660046113d7565b600c6020526000908152604090205481565b6040519081526020016101d3565b6101fc610218366004611407565b61044f565b6101fc60025481565b6102396102343660046113d7565b610550565b6040516101d39190611420565b610259610254366004611407565b6105bc565b005b610259610bea565b6101fc600d5481565b6101fc61027a3660046113d7565b600e6020526000908152604090205481565b610259610cd5565b6102596102a2366004611464565b610ce9565b6006546101bf906001600160a01b031681565b6102596102c8366004611486565b610fb7565b6101fc6201518081565b6101fc60075481565b6000546001600160a01b03166101bf565b6101fc60035481565b61034a610308366004611407565b600a602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b039094169492939192909160ff1686565b604080516001600160a01b03909716875260208701959095529385019290925260608401526080830152151560a082015260c0016101d3565b61038b61101d565b6040516101d391906114c8565b6102596103a63660046113d7565b6110da565b6102596103b9366004611407565b611104565b6101fc60095481565b6103ee6103d5366004611407565b6008602052600090815260409020805460019091015482565b604080519283526020830191909152016101d3565b6102596104113660046113d7565b61115d565b6102596104243660046113d7565b611187565b610259610437366004611464565b611200565b61025961044a366004611407565b61125a565b6000818152600a60209081526040808320815160c08101835281546001600160a01b0316815260018201549381019390935260028101549183019190915260038101546060830152600481015460808301526005015460ff1615801560a08301526104bd5750600092915050565b60208082015160009081526008825260408082208151808301909252805480835260019091015493820193909352606084015190926104fb91611569565b4210610508578151610517565b60608301516105179042611582565b905063bbf81e0081836020015185604001516105339190611595565b61053d9190611595565b61054791906115ac565b95945050505050565b6001600160a01b0381166000908152600b60209081526040918290208054835181840281018401909452808452606093928301828280156105b057602002820191906000526020600020905b81548152602001906001019080831161059c575b50505050509050919050565b8060095481106105e75760405162461bcd60e51b81526004016105de906115ce565b60405180910390fd5b6105ef6112b3565b6000828152600a6020908152604091829020825160c08101845281546001600160a01b031680825260018301549382019390935260028201549381019390935260038101546060840152600481015460808401526005015460ff16151560a083015233919082146106925760405162461bcd60e51b815260206004820152600d60248201526c556e617574686f72697a65642160981b60448201526064016105de565b8060a00151156106e45760405162461bcd60e51b815260206004820152601960248201527f557365722068617320616c726561647920636c61696d6564210000000000000060448201526064016105de565b602080820151600090815260088252604080822081518083019092528054825260010154928101929092526080830151900361091a578051606083015161072b9190611569565b4210156107565761073f6201518042611569565b6000868152600a6020526040902060040155610bda565b60006107618661044f565b83604001516107709190611569565b60065460405163a9059cbb60e01b81526001600160a01b0387811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e991906115f7565b6107f257600080fd5b6000868152600a6020526040808220600501805460ff19166001179055840151600d805491929091610825908490611582565b9250508190555060056040518060800160405280866001600160a01b03168152602001838152602001428152602001600280811115610866576108666114b2565b90528154600180820184556000938452602093849020835160049093020180546001600160a01b0319166001600160a01b03909316929092178255928201518184015560408201516002808301919091556060830151600383018054949593949193909260ff199092169184908111156108e2576108e26114b2565b0217905550506040518791507f7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb890600090a250610bda565b81608001514210156109655760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f20636c61696d207965742160601b60448201526064016105de565b6000606460035460646109789190611582565b84604001516109879190611595565b61099191906115ac565b60065460405163a9059cbb60e01b81526001600160a01b0387811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a91906115f7565b610a1357600080fd5b60065460045460408501516001600160a01b039283169263a9059cbb921690610a3d908590611582565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac91906115f7565b610ab557600080fd5b6000868152600a6020526040808220600501805460ff19166001179055840151600d805491929091610ae8908490611582565b9250508190555060056040518060800160405280866001600160a01b0316815260200183815260200142815260200160016002811115610b2a57610b2a6114b2565b90528154600180820184556000938452602093849020835160049093020180546001600160a01b0319166001600160a01b03909316929092178255928201518184015560408201516002808301919091556060830151600383018054949593949193909260ff19909216918490811115610ba657610ba66114b2565b0217905550506040518791507f7a355715549cfe7c1cba26304350343fbddc4b4f72d3ce3e7c27117dd20b5cb890600090a2505b505050610be660018055565b5050565b610bf261130c565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611619565b60065460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be691906115f7565b610cdd61130c565b610ce76000611366565b565b816007548110610d0b5760405162461bcd60e51b81526004016105de906115ce565b3382610d4b5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420616d6f756e742160881b60448201526064016105de565b6006546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc891906115f7565b610dd157600080fd5b600980546000908152600a6020908152604080832080546001600160a01b03199081166001600160a01b038881169182179093558654865283862060019081018c90558754875284872060029081018c905588548852858820426003909101819055838952600b885286892099548a548085018c559a8a52888a20909a019990995585516080810187529283529582018b815294820197885260608201878152600580548084018255985282517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db060049099029889018054909516951694909417835593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db286015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db39094018054919493909260ff1990921691908490811115610f4657610f466114b2565b0217905550506009805491506000610f5d83611632565b919050555082600d6000828254610f749190611569565b90915550506009546040516001600160a01b03831691907f5de017f2f649dce62f5bd496458cbbb75982a3dc78176fa154a31581cacdd6b290600090a350505050565b610fbf61130c565b806007548110610fe15760405162461bcd60e51b81526004016105de906115ce565b610fec8484846113b6565b60405182907f23b60b45372608c224839b95b862c17aaa397bb38a45c8341a51e41916b3aed690600090a250505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156110d1576000848152602090819020604080516080810182526004860290920180546001600160a01b03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff909116908111156110ad576110ad6114b2565b60028111156110be576110be6114b2565b8152505081526020019060010190611041565b50505050905090565b6110e261130c565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b61110c61130c565b6064811115801561111d5750600081115b6111585760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206665652160a01b60448201526064016105de565b600255565b61116561130c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61118f61130c565b6001600160a01b0381166111f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105de565b6111fd81611366565b50565b61120861130c565b61121582826007546113b6565b6007546040517f9193436894c1e220c236b0df5dd44eb674082159bf8dfacdba8b79270ced9e6990600090a26007805490600061125183611632565b91905055505050565b61126261130c565b606481111580156112735750600081115b6112ae5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206665652160a01b60448201526064016105de565b600355565b6002600154036113055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105de565b6002600155565b6000546001600160a01b03163314610ce75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113be61130c565b6000908152600860205260409020918255600190910155565b6000602082840312156113e957600080fd5b81356001600160a01b038116811461140057600080fd5b9392505050565b60006020828403121561141957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156114585783518352928401929184019160010161143c565b50909695505050505050565b6000806040838503121561147757600080fd5b50508035926020909101359150565b60008060006060848603121561149b57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b60208082528251828201819052600091906040908185019086840185805b8381101561154557825180516001600160a01b0316865287810151888701528681015187870152606090810151906003821061153057634e487b7160e01b84526021600452602484fd5b860152608090940193918601916001016114e6565b509298975050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561157c5761157c611553565b92915050565b8181038181111561157c5761157c611553565b808202811582820484141761157c5761157c611553565b6000826115c957634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600f908201526e125b9d985b1a59081cdd185ad95259608a1b604082015260600190565b60006020828403121561160957600080fd5b8151801515811461140057600080fd5b60006020828403121561162b57600080fd5b5051919050565b60006001820161164457611644611553565b506001019056fea264697066735822122011723b8b0ad0cea014e326f3009e12941beb0d90a9ac9c85285f81fb0fc5b21064736f6c63430008110033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Staking> {
    return super.deploy(_stakingToken, overrides || {}) as Promise<Staking>;
  }
  override getDeployTransaction(
    _stakingToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_stakingToken, overrides || {});
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
